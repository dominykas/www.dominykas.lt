<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Kaip tapti ekspertu? &#187; accessibility</title>
	<atom:link href="http://www.d-b.lt/tag/accessibility.rss2.xml" rel="self" type="application/rss+xml" />
	<link>http://www.d-b.lt</link>
	<description>Jeigu tokiu tapsiu - čia yra istorija ir vartotojo gidas. Dominyko Blyžės blog&#039;as.</description>
	<lastBuildDate>Mon, 04 Feb 2013 22:40:30 +0000</lastBuildDate>
	<generator>http://wordpress.org/?v=2.9.2</generator>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
			<item>
		<title>Užrašai iš FullFrontal 2009</title>
		<link>http://www.d-b.lt/2009/11/uzrasai-is-fullfrontal-2009.html</link>
		<comments>http://www.d-b.lt/2009/11/uzrasai-is-fullfrontal-2009.html#comments</comments>
		<pubDate>Sat, 28 Nov 2009 21:46:42 +0000</pubDate>
		<dc:creator>Dominykas</dc:creator>
				<category><![CDATA[Tinklo kūrimas]]></category>
		<category><![CDATA[accessibility]]></category>
		<category><![CDATA[html5]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[standartai]]></category>

		<guid isPermaLink="false">http://www.d-b.lt/?p=193</guid>
		<description><![CDATA[Prėjusį penktadienį Brighton&#8217;e vyko FullFrontal 2009 JavaScript konferencija, kurioje turėjau progą apsilankyti. Tikrai nenusivyliau!
Šiame blogo įraše susidėjau tai, ką pasižymėjau pats sau beklausydamas kalbėtojų. Pačių kalbų tikrai neketinu aprašinėti &#8211; tai puikiai padarė Ajaxian (nuorodas pateikiu), o skaidrės taipogi prieinamos viešai.
Jeigu kažkuris punktas sudomino &#8211; palikit komentarą &#8211; išplėsiu!
Christian Heilmann &#8211; Frontloaded and zipped up [...]]]></description>
			<content:encoded><![CDATA[<p>Prėjusį penktadienį Brighton&#8217;e vyko FullFrontal 2009 JavaScript konferencija, kurioje turėjau progą apsilankyti. Tikrai nenusivyliau!</p>
<p>Šiame blogo įraše susidėjau tai, ką pasižymėjau pats sau beklausydamas kalbėtojų. Pačių kalbų tikrai neketinu aprašinėti &#8211; tai puikiai padarė Ajaxian (nuorodas pateikiu), o skaidrės taipogi prieinamos viešai.</p>
<p>Jeigu kažkuris punktas sudomino &#8211; palikit komentarą &#8211; išplėsiu!</p>
<h2><a href="http://www.wait-till-i.com/">Christian Heilmann</a> &#8211; Frontloaded and zipped up &#8211; do loose types sink ships</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-chris-heilmann-on-javascript-security">Ajaxian santrauka</a>; <a href="http://www.wait-till-i.com/2009/11/21/frontloaded-and-zipped-up-the-full-frontal-2009-keynote/">skaidrės</a>; <a href="http://www.archive.org/download/FrontloadedAndZippedUp-FullFrontalJavascriptConference2009/FrontloadedAndZippedUp-FullFrontalConference2009.mp3">garso įrašas</a>.</p>
<ul>
<li>Apie &#8220;AJAX&#8221; programuotojus kalbama žymiai pagarbiau negu apie &#8220;JavaScript&#8221; programuotojus. <i>Abydna, vienok.</i></li>
<li>JS nėra programavimo kalba skirta kiekvienam &#8211; ir ne kiekvienas save vadinantis &#8220;tinklo kūrėju&#8221; turėtu ja užsiimti.</li>
<li>JS egzistavo gerokai prieš jQuery.</li>
<li>Naudojant JS kalbą, reikėtų ją naudoti taip, kaip ji buvo suplanuota &#8211; gana kurti įvairias abstrakcijas pagal tradicinius OO modelius. JS turi savo stilių &#8211; privalu jį išnaudoti ir įsisavinti.</li>
<li>Saugumo skylės (XSS, XSRF ir t.t.) yra <i>server-side</i> problema &#8211; JS dažniausiai yra nekaltas (nors ir išnaudojamas)</li>
<li>Nepamiršti: http-only sausainiukai sesijoms</li>
<li>Bet kuris API yra iš esmės saugumo skylė &#8211; Firefox greičiausiai yra pati nesaugiausia naršyklė būtent dėl savo plėtinių architektūros. Priminė kažkieno sakinį, kad mash-up&#8217;ai yra XSS atakos prieš save patį.</li>
<li>Išbandyti: dažnos ir paprastos apklausėlės kaip mokymosi metodas komandoje</li>
<li>Pasidomėti: adsafe.org saugumo rekomendacijos</li>
<li>Pasidomėti: <a href="http://code.google.com/p/google-caja/">Google Caja</a> (yra informacijos <a href="http://developer.yahoo.com/yap/guide/caja-support.html">ir YDN</a>)
<ul>
<li>Kas per saugumo skylė IE su <code>radio</code> mygtukais?</li>
<li>Kodėl <code><a href="http://www.positioniseverything.net/easyclearing.html">clearfix</a></code> nevartotinas pagal Caja?</li>
<li>Kodėl tiek daug CSS apribojimų?</li>
</ul>
</li>
<li><code>javascript:void(0)</code> turi mirti (žiauria ir negarbina mirtimi)!</li>
<li><a href="http://ejohn.org/">John Resig</a> yra, lyg ir, pažadėjęs, kad jeigu pakankamai žmonių to reikalaus &#8211; jQuery pritaikys Caja rekomendacijas</li>
<li>Pasidomėti: ar įmanoma padaryti <i>YQL injection</i>?</li>
<li>Pasidomėti: jau egzistuoja OAuth implementacija vien su JS</li>
</ul>
<h2><a href="http://robertnyman.com/">Robert Nyman</a> &#8211; JavaScript: from birth to closure</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-robert-nyman-on-the-javascript-language">Ajaxian santrauka</a>; <a href="http://www.slideshare.net/robnyman/javascript-from-birth-to-closure">skaidrės</a>.</p>
<ul>
<li>Kas čia per įprotis, tikrinti ar dižiąjame ekrane bėgantis Twitter srautas yra cenzūruojamas? Įdomus kultūrinis pokrypis, besivystant technologijoms&#8230;</i>
<li>Nepamiršt: skaityti <a href="http://dmitry.baranovskiy.com/">Dmitry Baranovskiy&#8217;o</a> blogą</li>
<li>Pasikartot: <code>typeof kint == 'undefined'</code> naudojimas</li>
<li>Pasidomėt: Koks yra globalus <code>this</code> Rhino variklyje (t.y. <code>window</code> atitikmuo naršyklėse)?</li>
<li>Pasidomėt: <a href="http://yuiblog.com/blog/2007/06/12/module-pattern/">YAHOO Module Pattern</a></li>
</ul>
<h2><a href="http://www.quirksmode.org/">Peter-Paul Koch</a> &#8211; W3C Widgets</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-ppk-on-mobile-quirks-and-practices">Ajaxian santrauka</a>; <a href="http://www.quirksmode.org/blog/archives/2009/11/presentations_t.html">skaidrės</a>.</p>
<ul>
<li>Pasidomėt: Ar Nokia N900 naršyklė yra fennec? (Atsakymas: taip)</li>
<li>Mobilaus telefono naudojimas interneto naršymui yra puikus būdas pasimokyti &#8211; visos vartojiškumo pamokos gali būti pritaikytos eilinėms naršyklėms</li>
<li>Ar <code>@media</code> kartu su iPhone&#8217;o <code>&lt;meta name="viewport" /&gt;</code> galėtų išspręsti problemą, kad <i>user-agentai</i> savaip interpretuoja pločius kai svetainė yra <i>išzoominta</i>? (Prie alaus PPK patvirtino, kad ketina tą patikrinti artimiausiu metu)</li>
<li>Kai kuriuose aukšto DPI telefonuose kartais būna sunku paspausti tą vietą kurią nori &#8211; ar gali spaudimo jautrumo DPI ir ekrano DPI gali būti skirtingi?</li>
<li>Nejaugi mobilūs telefonai neturi &#8220;ilgai trunkančio skripto&#8221; perspėjimų?</li>
<li>Dėl greičio problemų, rekomenduojama nenaudoti <code>iframe</code> mobiliems telefonams skirtose svetainėse &#8211; kaip įgyventi AJAX-išką naršyklės istoriją (<i>back/forward</i>)?</li>
<li>Dingstantis ryšys yra problema &#8211; ir <code>online/offline</code> įvykiai jos visiškai nepadeda spręsti</li>
<li>Mobilių telefonų kešas yra ~200kb &#8211; būtina dar protingiau optimizuoti kodą</li>
<li>W3C specifikacijos <i>widgetai</i> leidžia tik vieną HTML puslapį &#8211; potenciali problema?</li>
<li>Dalintis <i>widgetais</i> per Bluetooth yra pavojinga</li>
<li>Animacijos efektai mobiliuose telefonuose veikia lėtai. Iš patirties &#8211; ne viskas taip jau blogai, bet optimizuoti ir apskritai elgtis protingai privalu</li>
</ul>
<h2><a href="http://www.kryogenix.org/">Stuart Langridge</a> &#8211; New things that HTML5 provides to JavaScript hackers</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-stuart-langridge-on-html5-features">Ajaxian santrauka</a></p>
<ul>
<li>Pasidomėti: <a href="http://documentcloud.github.com/underscore/">underscore.js</a></li>
<li>Internetas jau nebėra &#8220;programų rašymo platforma&#8221;. Tavo <em>svetainė</em> gali būti ta platforma, jeigu atidarysi savo API. Ir net jeigu neatidarysi &#8211; yra GreaseMonkey. Reikia tam būti pasiruošus!</li>
<li>Idėja: naršyklių gamintojai, galėtų turėti standartinį būdą palaikymo tikrinimui, t.y. jeigu tu rašai savo kodą laikydamasis <i>progressive enhancement</i> principo, kartais turi paprastus būdus patikrinti, ar kažkas veiks &#8211; o kartais ne (pvz. Operos <code>&lt;event-source/&gt;</code>). O galėtų būti kas nors paprasto, pvz. <code>window.navigator.supports("event-source");</code></li>
</ul>
<h2><a href="http://twitter.com/toddkloots">Todd Kloots</a> &#8211; More accessible user interfaces with ARIA</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-todd-kloots-on-aria-and-acessibility">Ajaxian santrauka</a>, <a href="http://www.yuiblog.com/blog/2009/11/23/video-kloots-yuiconf2009-a11y/">video įrašas</a> ta pačia tema iš YUI konferencijos</p>
<ul>
<li>Idėja: YUI3 šiuo moment palaiko ARIA pridėdami roles ir atributus elementams, su kuriais dirba, pvz. sukuriant YUI meniu JS, susiiję elementai yra teisingai pažymimi. Ar neturėtų viskas būti atvirkščiai? T.y. rolės ir atributai nustatomi tiesiai HTML dar serveryje, o YUI (ar kita biblioteka) inicializuojasi jau naudodami tas roles.</li>
<li>Toddas kalbėjo apie tai, kaip galima &#8220;uždėti ARIA sluoksnį savo sistemoje&#8221;. Bet argi nebūtų paprasčiau laikytis &#8220;ARIA palaikymo&#8221; kaip pagrindinio principo, t.y. tai yra kažkas tokio, ką tiesiog darai natūraliai, negu tai, ką darai pabaigoje, ant viršaus? Lygiai taip, kaip kažkada reikėjo pakeisti mastymą rašant HTML ir CSS, bei išmokti naudoti <i>progressive enhancement</i>, o ne <i>graceful degradation</i>.</li>
<li>YUI2 palaiko <i>&#8220;<a href="http://yuiblog.com/blog/2007/01/17/event-plan/">event delegation</a>&#8220;</i>? Čia nuo kada? (Atsakymas: pasirodo, nuo YUI 2.8 &#8211; pamiršęs buvau&#8230; <i>&#8220;event delegation&#8221;</i> valdo!)</li>
<li>Žmonės su normaliu regėjimu, turbūt savo protiniuose modeliuose (kaip išversti <i>mental model</i>?) turbūt be problemų priima, kad meniu dažnai eina iš kairės į dešinę. Kaip tai suvokia aklieji? T.y. kaip jų modeliai susitvarko su tuo, kad meniu navigacija vykdoma &#8220;kairė/dešinė&#8221; mygtukais, o ne &#8220;viršus/apačia&#8221;, kai naudojamos ekrano skaityklės?</li>
<li>Pasidomėti: ar ARIA turi kokį nors &#8220;fokusuotos grupės&#8221; apibrėžimą, o ne vien tik &#8220;fokusuoto elemento&#8221;?</li>
<li>Pasidomėti: <i>accessibility</i> šiuo metu dažniausiai siejasi su pele ir klaviatūra, kaip įvesties įrenginiais &#8211; kokie modeliai naudojami kitiems įrenginiams?</li>
<li>Pasidomėti: ką HTML5 specifikacija sako apie <code>&lt;section/&gt;</code> <i>web application</i> kontekste?</li>
<li>Pasidomėti: klaviatūros greitųjų klavišų atrandamumas lankytojams su <em>normalia</em> rega</li>
</ul>
<h2><a href="http://twitter.com/jaffathecake">Jake Archibald</a> &#8211; Optimising where it hurts</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-jake-archibald-on-performance-optimisation">Ajaxian santrauka</a>; <a href="http://www.jakearchibald.co.uk/jsperformance/">tyrimas ir skaidrės</a></p>
<ul>
<li>Ar jis čia skaidres varto su savo WII kontroleriu? Geras!</li>
<li>Niekada nenaudoti <code>eval()</code>, ypač <i>closure</i> viduje &#8211; tai iš esmės nužudo visas JS variklių (V8, TraceMonkey ir t.t.) optimizacijas, nes <code>eval()</code> gali nesunkiai pakeisti kintamųjų aprėptį (kaip išversti <i>scope</i>?)</li>
<li>Nenaudoti <i>closure</i> per dideliam gyliui, jeigu galima to išvengti</li>
<li><em>Niekada nenaudoti</em> eilučių sujungimo, kai jos rašomos į <code>innerHTML</code>, t.y. ne <code>el.innerHTML="&lt;div&gt;"+kint+"&lt;/div&gt;"</code>, o <code>var s="&lt;div&gt;"+kint+"&lt;/div&gt;"; el.innerHTML=s;</code></li>
<li>Vengti <code>window.onunload</code> naudojimo, nes nužudomas kešinimas (jQuery jau turi šią problemą &#8211; bet ketina išspręsti)</li>
<li>Švarus ir paprastas HTML, neturintis bereikalingų tagų, pats savaime paspartina selektorių darbą (nes reikia perfiltruoti mažesnį kiekį elementų). Žodžiu, rašyti didelį kiekį nesemantinio HTML (ar tai būtų nereikalingi <code>div</code>, ar <code>table</code>) yra blogai!</li>
<li>Kiekvienas turėtų pasimokyti pats rašyti vykdymo greičio testus (tik reikia nepamiršti apie &#8220;<a href="http://ejohn.org/blog/accuracy-of-javascript-time/">16ms problemą</a> JS&#8221;)</li>
<li>&#8220;Optimizuok ten kur skauda&#8221; iš tikro tereiškia &#8220;nebūk durnas&#8221; &#8211; visos diskusijos, apie tai kuris ciklas optimalesnis (<code>for</code> prieš <code>while</code>) yra bevertės (nes sutaupo 0.002 <em>mili</em>sekundės). Iš tikro reikia izoliuoti tą dalį, kuri veikia lėčiausiai, ir tvarkyti būtent ją. Vargti stengiantis rašyti &#8220;teisingą kodą&#8221; iš anksto yra beprasmiška &#8211; žinot istoriją su &#8220;priešlaikine optimizacija&#8221;, ar ne?</li>
</ul>
<h2><a href="http://simonwillison.net/">Simon Willison</a> &#8211; Beating server side engineers in their own game</h2>
<p><a href="http://ajaxian.com/archives/full-frontal-09-simon-willison-on-server-side-javascript-and-node-js">Ajaxian santrauka</a>; <a href="http://simonwillison.net/2009/Nov/23/node/">autoriaus santrauka</a></p>
<ul>
<li>Pasidomėti plačiau apie <a href="http://en.wikipedia.org/wiki/ECMAScript_for_XML">E4X</a></li>
<li>Mac&#8217;ų vartotojai elgiasi&#8230; kitaip. Tiesiog kitaip ir tiek.</li>
<li>Ar eitų NodeJS panaudoti kaip <i>unit testų</i> konsolę? Integruoti į <i>continuous build&#8217;us</i>?</li>
<li>JS nėra &#8220;strongly typed&#8221; kalba &#8211; tai natūraliai yra sunkiau dirbant komandoje. Pasidomėti: kaip tai galima spręsti</li>
<li><a href="http://nodejs.org/">NodeJS</a> ir <a href="http://couchdb.apache.org/">CouchDB</a> yra labai labai <i>seksi</i>! Kiekvienas turėtų pasidomėti kaip jie veikia, kaip optimizuoja procesus ir kokiais principais yra paremti!</li>
</ul>
]]></content:encoded>
			<wfw:commentRss>http://www.d-b.lt/2009/11/uzrasai-is-fullfrontal-2009.rss2.xml</wfw:commentRss>
		<slash:comments>8</slash:comments>
<enclosure url="http://www.archive.org/download/FrontloadedAndZippedUp-FullFrontalJavascriptConference2009/FrontloadedAndZippedUp-FullFrontalConference2009.mp3" length="40572024" type="audio/mpeg" />
		</item>
		<item>
		<title>Prieinamos svetainės žmonėms BE negalių</title>
		<link>http://www.d-b.lt/2009/02/prieinamos-svetaines-zmonems-be-negaliu.html</link>
		<comments>http://www.d-b.lt/2009/02/prieinamos-svetaines-zmonems-be-negaliu.html#comments</comments>
		<pubDate>Tue, 17 Feb 2009 02:20:30 +0000</pubDate>
		<dc:creator>Dominykas</dc:creator>
				<category><![CDATA[Usability]]></category>
		<category><![CDATA[accessibility]]></category>

		<guid isPermaLink="false">http://www.d-b.lt/2009/02/prieinamos-svetaines-zmonems-be-negaliu.html</guid>
		<description><![CDATA[Prieš porą savaičių WebAIM paskelbė ekrano &#8220;skaityklių&#8221; naudotojų apklausos rezultatus. Nepaisant to, kad man ganėtinai keistai skamba kai kurių klausimų, o ypač atsakymų variantų formuluotės, pats tyrimas&#8230; neatskleidė nieko naujo ar išskirtinio tarp interneto naudojų su negalia.
Ką sako screenreader&#8217;ių naudotojai?
Žiūriu vien į skaičius, ir beveik neinterpretuoju jų prasmės:

Apie trečdalis teigia esą arba ekspertai, arba pradinukai [...]]]></description>
			<content:encoded><![CDATA[<p>Prieš porą savaičių WebAIM paskelbė <a href="http://webaim.org/projects/screenreadersurvey/">ekrano &#8220;skaityklių&#8221; naudotojų apklausos rezultatus</a>. Nepaisant to, kad man ganėtinai keistai skamba kai kurių klausimų, o ypač atsakymų variantų formuluotės, pats <strong>tyrimas&#8230; neatskleidė nieko naujo</strong> ar išskirtinio tarp interneto naudojų su negalia.</p>
<h2>Ką sako <i>screenreader&#8217;ių</i> naudotojai?</h2>
<p>Žiūriu vien į skaičius, ir beveik neinterpretuoju jų prasmės:</p>
<ul>
<li>Apie trečdalis teigia esą arba ekspertai, arba pradinukai kompiuterių naudojime. Tai reiškia, kad likę 70% yra daugiau mažiau tai ką Alanas Cooperis vadina <dfn title="amžini vidutiniokai">perpetual intermediates</dfn></li>
<li>Pirmame svetainės puslapyje, apie 80% skaito turinį arba spaudžia nuorodas. Likę naudojasi paieška.</li>
<li>Geros sub-antraštės yra labai svarbu beveik visiems!</li>
<li>Paieška svetainėje yra naudinga daugiau nei pusei vartotojų!</li>
<li>&#8220;Svetainės žemėlapis&#8221; yra ne tiek naudingas, kiek atrodo didžiajai daliai web meistrelių.</li>
<li>&#8220;Tekstinė&#8221; svetainės versija yra mažiau populiari negu &#8220;pritaikyta ekrano skaityklei&#8221;.</li>
<li>Iššokantys langai yra &#8220;sunkūs&#8221; naudotis</li>
<li>Didžioji dalis atsakiusiųjų nesuvokia kas yra web 2.0</li>
<li>Flash turinys yra &#8220;sunkus&#8221; naudotis</li>
<li>PDF turinys yra pakankamai &#8220;sunkus&#8221; naudotis</li>
</ul>
<h2>O kaip elgiasi &#8220;normalūs&#8221; žmonės?</h2>
<p>Dabar man kas nors atsakykite &#8211; kuo gi tie neįgalieji taip skiriasi nuo eilinių interneto vartotojų? Štai jums 7 nemokami interneto svetainių kūrimo patarimai:</p>
<ul>
<li>Internete veikia du principai: <strong>turinys yra karalius, o <a href="http://www.d-b.lt/2008/01/steve-krug-dont-make-me-think.html">žmonės ieško kur paspausti</a></strong>, kad pereiti toliau, kas privestų prie geresnio karališko turinio. Neįgalieji elgiasi lygiai taip pat.</li>
<li>Rašant tiek komercinės svetainės tekstą, tiek blogą, tiek referatą universitete, vienas pirmųjų duodamų patarimų yra netuščiažodžiauti: &#8220;<strong>tegul teksto būna nedaug, ir tegul jis būna gražiai suskaidytas</strong>&#8220;. Jeigu screenreader&#8217;io naudotojas antraštes pritaiko &#8220;šokinėjimui&#8221; tarp teksto dalių, tai lygiai taip pat eilinis vartotojas &#8220;šokinėja&#8221; tarp jų <a href="http://www.useit.com/alertbox/9710a.html">skanuodamas svetainės tekstą</a>.</li>
<li>Raktažodžiais paremta vertikali paieška duoda puikius rezultatus ir yra greitesnis naršymo būdas. Iš dalis dėl to, kad per mažai tiek didelių, tiek mažų svetainių pamąsto apie elementarią informacijos architektūrą. Jei kalbame apie usability &#8211; interfeisas neturi atspindėti vidinio sistemos veikimo, o <strong>informacija turi būti išdėstyta pagal tai, <a href="http://www.useit.com/alertbox/20040719.html">kaip ją įsivaizduoja vartotojai</a></strong>, o ne pagal taip, kaip direktorius ją susidėlioja ant savo stalo. Tada ir svetainės žemėlapis bus naudingas eiliniam vartotojui.</li>
<li>Eiliniai interneto vartotojai <i>popup&#8217;ų</i> nemėgsta lygiai taip pat kaip ir neįgalieji.</li>
<li>Eiliniai interneto vartotojai (bereikalingo) Flash turinio vengia lygiai taip pat kaip ir neįgalieji &#8211; jis tinka daug kam, tačiau toli gražu ne informacijai skleisti. Išimtis: vaizdinis komikso tipo procesų atvaizdavimas, kaip pvz. <a href="http://www.google.com/googlebooks/chrome/">Google su Chrome</a>, pagerina greitą informacijos perteikimą matantiesiems.</li>
<li>Tavo (ir mano) mama nežino kas yra web 2.0, todėl verta spjauti į visus buzzwordus ir sukurti tiesiog veikiančią svetainę.</li>
<li>Eiliniai interneto vartotojai rinksis paprastą, o ne PDF turinio versiją, kai tik turės tokią galimybę. Lygiai kaip ir neįgalieji.</li>
</ul>
<h2>Nekurkite &#8220;neįgaliesiems pritaikytų/prieinamų&#8221; svetainių!</h2>
<p>Man velniškai patiko Bruce Lawson <a href="http://www.brucelawson.co.uk/2009/mobile-web-development-compatible-with-the-one-web/">straipsnyje apie mobilų internetą</a> pateiktas pavyzdys: <dfn title="Maximos atitikmuo UK">Tesco</dfn> apie 2002 metus sukūrė neįgaliesiems &#8220;prieinamą&#8221; svetainę. Dalis žmonių be negalios ją naudojo tiesiog todėl, kad ji buvo paprastesnė, greitesnė, patogesnė ir visaip kitaip geresnė!</p>
<p>Visai neseniai, diskutuojant Javascript klausimais, turėjau ilgai ir nuobodžiai ginčytis ir aiškinti, kad <strong>sukurti svetainę <em>be</em> Javascript yra lengviau</strong>, negu su. Gi tuo tarpu mano oponentai man bandė įteigti, kad &#8220;svetainės be JS kūrimas ir palaikymas [<i>maintenance</i>] yra brangesnis&#8221;. Gal jie ir teisūs, kad tenka šiek tiek pasukti galvą, kaip naujausias web 2.0 savybes perteikti klasikinio tinklo kontekste, tačiau šiandien visi tie kurie ginčijosi, pirma sukuria, sakykim, formą, tada surašo validacijos kodą <i>server side</i>, tada įsitikina, kad ta validacija veikia ir tik tada suprogramuoja JS validaciją. T.y. pirma sukuriama veikianti sistema, o tik po to ji <strong>papildomu darbu sugadinama ir tampa &#8220;nebeprieinama&#8221;</strong>. To galima išvengti palyginti mažomis sąnaudomis, tuo pačiu užtikrinant SEO ir šiaip veikimą didesniam vartotojų ratui. Ar gal kas norit paprieštarauti, kad <i>server side</i> validacija nereikalinga?&#8230;</p>
<h2>Ir dar keli smulkūs pastebėjimai apie apklausą&#8230;</h2>
<ul>
<li>84% atsakovų <em>teigia</em>, kad atnaujina savo screen reader&#8217;į per maždaug metus nuo jo pasirodymo laiko. Tačiau 33% vis dar naudoja IE6&#8230;</li>
<li>&#8220;Peršokti prie turinio&#8221; nuorodos: klausimo formulavimas visiškai neanalizuoja ar vartotojo <dfn title="pagrindinė užduotis">primary concern</dfn> yra &#8220;skaityti turinį&#8221; ar &#8220;naudotis navigacija&#8221; ir kuris iš jų yra naudingesnis. Nors ir nedaug daugiau, tačiau net klausime apie <em>pirmąjį</em> svetainės puslapį, dauguma atsakė, kad jie skaito! Mano nuomone tam, kad priimti sprendimą &#8220;eiti į kitą puslapį&#8221;, t.y. naudotis navigacija, visų pirma reikia peržvelgti turinį, todėl tvarka &#8220;[peršokti prie turinio] &#8212; skaityti turinį &#8212; [peršokti pastraipą, nes neįdomu] &#8212; [peršokti <em>atgal</em> į navigaciją] turėtų būti neteisinga (plg. &#8220;[peršokti prie navigacijos? - ne] &#8212; skaityti turinį &#8212;  [peršokti pastraipą, nes neįdomu] &#8212; [navigacija jau čia]&#8220;). Kita vertus, vartotojų testų nedariau, todėl negaliu ginčytis&#8230;</li>
<li>Labai svarbu <a href="http://www.456bereastreet.com/archive/200811/writing_good_alt_text/">apibūdinti paveiksliukų <em>turinį</em></a>, o ne tik abstrakčiai apibrėžti prasmę &#8211; &#8220;Kompanijos logotipas&#8221; ar &#8220;Mano nuotrauka Afrikoje&#8221; yra visada geriau negu tiesiog &#8220;Kompanija&#8221; ar &#8220;Aš&#8221; kaip <code>alt</code> tekstas.</li>
</ul>
<h2>Kas yra <i>accessibility</i>?</h2>
<p>Man dažnai yra sunku suvokti, kai žmonės kalba apie <dfn title="Prieinamumas">accessibility</dfn> kaip apie dalyką, kurį <em>reikia</em> daryti tam, kad svetainė būtų pritaikyta žmonėms su negalia. Tai yra didžiausias melas, o taipogi tai negalioja visame pasaulyje. Gal kas galite man pasiūlyti programinę įrangą, kuri gražiai skaitytų lietuvių kalba sukurtas svetaines? Juk <strong>žemagrindžiai autobusai yra gerai ne todėl, kad į juos lengva įvažiuoti su invalido vežimėliu</strong>, o todėl, kad net <em>tau</em> į juos įlipti yra lengviau, nes nereikia aukštai kelti kojų! Tai, kas yra lengvai naudojama tada, kai neturi visų fizinių priemonių, yra dar lengviau naudojama tada kai jas turi &#8211; nuo to ir reikia pradėti kurti tiek interneto svetaines, tiek visus kitus produktus.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.d-b.lt/2009/02/prieinamos-svetaines-zmonems-be-negaliu.rss2.xml</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
